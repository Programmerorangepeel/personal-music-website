<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xs.mapper.CollectMapper">

    <resultMap id="BaseResultMap" type="com.xs.domain.Collect">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="userId" column="user_id" jdbcType="BIGINT"/>
            <result property="type" column="type" jdbcType="TINYINT"/>
            <result property="songId" column="song_id" jdbcType="BIGINT"/>
            <result property="songListId" column="song_list_id" jdbcType="BIGINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <delete id="deleteBySongListId">
        delete collect from collect where song_list_id = #{id}
    </delete>

    <delete id="deleteBySongId">
        delete collect from collect where song_id = #{id}
    </delete>

    <delete id="deleteByUserId">
        delete collect from collect where user_id = #{id}
    </delete>

    <select id="getAllCollectSongByConsumerId" resultType="com.xs.dto.SongDto">
        select
            s1.id,
            s1.singer_id,
            s1.name,
            s2.name singerName,
            s1.introduction,
            s1.create_time,
            s1.update_time,
            s1.pic,
            s1.lyric,
            s1.url,
            s1.play_count
        from
            collect c
                inner join song s1 on c.song_id = s1.id
                inner join singer s2 on s1.singer_id = s2.id
        where
            c.user_id = #{id}
    </select>

    <select id="getAllCollectSongListByConsumerId" resultType="com.xs.domain.SongList">
        select
            sl.id,
            sl.title,
            sl.pic,
            sl.introduction,
            sl.style
        from
            collect c inner join song_list sl on c.song_list_id = sl.id
        where c.user_id = #{id}
    </select>

</mapper>
